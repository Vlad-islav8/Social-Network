{"version":3,"file":"static/js/620.9c1854d1.chunk.js","mappings":"sLACA,QAAgC,+BAAhC,EAA4G,6BAA5G,EAAyJ,+BCAzJ,EAA4B,+BCA5B,EAA8B,+BAA9B,EAAqE,yB,aCiBrE,QAfA,SAAmBA,GAIf,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBC,UAC/BC,EAAAA,EAAAA,MAAA,UAAQC,QALQC,KACpBP,EAAMQ,cAAcR,EAAMS,GAAG,EAISP,UAAWC,EAAaC,SAAA,EACtDH,EAAAA,EAAAA,KAAA,OAAKS,IAAKV,EAAMW,IAAKC,IAAI,0CACzBX,EAAAA,EAAAA,KAAA,MAAAG,SAAKJ,EAAMa,WAK3B,ECUA,QAvBA,SAAqBb,GAEjB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,SAEzBJ,EAAMc,MAAMC,KAAKC,IAETf,EAAAA,EAAAA,KAACgB,EAAS,CACNR,GAAIO,EAAGP,GACPI,KAAMG,EAAGH,KACTF,IAAKK,EAAGL,IACRO,SAAUF,EAAGE,SACbV,cAAeR,EAAMQ,iBAEjBR,GADCgB,EAAGP,OAQpC,ECvBA,EAA8B,iCAA9B,EAA0E,8BAA1E,EAAkH,6BAAlH,EAA4J,gCCA5J,GAAgB,YAAc,+BCgB9B,QAfA,SAAkBT,GACd,MAAMkB,EAAWlB,EAAMmB,WAAWD,SAASH,KAAKC,IAExCf,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOiB,YAAYhB,UAC/BH,EAAAA,EAAAA,KAAA,KAAAG,SAAIY,EAAGK,cAInB,OACIpB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOmB,WAAWlB,SAC7Bc,GAGb,E,kCCeA,MAYMK,GAAkBC,EAAAA,EAAAA,GAAU,CAC9BC,KAAM,cADcD,EAZJxB,IAKZK,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAmBuB,SAAU1B,EAAM2B,cAJxCC,IACZ5B,EAAM6B,WAAWD,EAAOC,WAAY7B,EAAMS,GAAG,IAG4BL,SAAA,EACrEH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAiBnB,KAAK,aAAaoB,KAAK,OAAOC,YAAY,2FAC7EjC,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,gEAQpB,EAvCA,SAAqBJ,GACjB,MAAMmC,EAAenC,EAAMmB,WACrBA,EAAanB,EAAMc,MAAMsB,MAAKC,GAAQA,EAAK5B,KAAO0B,IAExD,OACIlC,EAAAA,EAAAA,KAAAqC,EAAAA,SAAA,CAAAlC,SACKe,GACGd,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAgBC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAKS,IAAKS,EAAWR,IAAKC,IAAK,sBAAOO,EAAWN,UACjDZ,EAAAA,EAAAA,KAAA,MAAAG,SAAKe,EAAWN,WAEpBZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC3BH,EAAAA,EAAAA,KAACsC,EAAQ,CAACpB,WAAYA,OAE1BlB,EAAAA,EAAAA,KAACsB,EAAe,CAACM,WAAY7B,EAAM6B,WAAYpB,GAAI0B,QAGvDlC,EAAAA,EAAAA,KAAA,KAAAG,SAAG,wGAInB,ECNA,QAlBA,SAAiBJ,GACb,OACIK,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAqBC,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,cACJH,EAAAA,EAAAA,KAACuC,EAAW,CAAC1B,MAAOd,EAAMc,MAAON,cAAeR,EAAMQ,oBAE1DP,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,UACjCH,EAAAA,EAAAA,KAACwC,EAAW,CACRZ,WAAY7B,EAAM6B,WAClBV,WAAYnB,EAAMmB,WAClBL,MAAOd,EAAMc,YAKjC,E,kCClBO,MAAM4B,EAAcC,GAChBA,EAAMC,QAGJC,GAAiBC,EAAAA,EAAAA,IAAe,CAACJ,IAC1CE,GAAWA,EAAQ9B,QAGViC,GAAgBD,EAAAA,EAAAA,IAAe,CAACJ,IACzCE,GAAWA,EAAQzB,aCCvB,IAMI6B,EAAsB,CACtBxC,cAAa,KACbqB,WACJ,MACA,SAAeoB,EAAAA,EAAAA,IACXC,EAAAA,EACAC,EAAAA,EACAD,EAAAA,GACAE,EAAAA,EAAAA,KAdmBT,IACZ,CACH7B,MAAO+B,EAAeF,GACtBxB,WAAY4B,EAAcJ,MAWLK,GAJ7B,EAd0BhD,IACfC,EAAAA,EAAAA,KAACoD,EAAO,IAAKrD,K","sources":["webpack://social-network/./src/components/Main/Dialogs/Dialogs.module.css?6b47","webpack://social-network/./src/components/Main/Dialogs/DialogUsers/Dialogusers.module.css?b28f","webpack://social-network/./src/components/Main/Dialogs/DialogUsers/UserIthem/UserIthem.module.css?44a0","components/Main/Dialogs/DialogUsers/UserIthem/UserIthem.jsx","components/Main/Dialogs/DialogUsers/Dialoguswes.jsx","webpack://social-network/./src/components/Main/Dialogs/Usermessage/Usermessage.module.css?46d0","webpack://social-network/./src/components/Main/Dialogs/Usermessage/Messages/Messages.module.css?12ca","components/Main/Dialogs/Usermessage/Messages/Messages.jsx","components/Main/Dialogs/Usermessage/Usermessage.jsx","components/Main/Dialogs/Dialogs.jsx","redux/selectors/dialogsSelector.js","components/Main/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogContent\":\"Dialogs_dialogContent__j0pv1\",\"ithem\":\"Dialogs_ithem__-hxNA\",\"dialogUsers\":\"Dialogs_dialogUsers__q7I+y\",\"dialogMessage\":\"Dialogs_dialogMessage__ym90d\",\"user\":\"Dialogs_user__FRLx7\"};","// extracted by mini-css-extract-plugin\nexport default {\"usersList\":\"Dialogusers_usersList__Efl2k\"};","// extracted by mini-css-extract-plugin\nexport default {\"itemWrapper\":\"UserIthem_itemWrapper__GQFmb\",\"ithem\":\"UserIthem_ithem__eCcc5\"};","import React from \"react\";\r\nimport styles from './UserIthem.module.css'\r\n\r\nfunction Userithem(props) {\r\n    const handleSetActive = () => {\r\n        props.setUserActive(props.id)\r\n    }\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <button onClick={handleSetActive} className={styles.ithem}>\r\n                <img src={props.ava} alt=\"аватар\" />\r\n                <h2>{props.name}</h2>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Userithem\r\n\r\n","import React from \"react\";\r\nimport styles from './Dialogusers.module.css'\r\nimport Userithem from \"./UserIthem/UserIthem\";\r\nfunction Dialogusers(props) {\r\n\r\n    return (\r\n        <div className={styles.usersList}>\r\n            {\r\n                props.users.map((el) => {\r\n                    return (\r\n                        <Userithem\r\n                            id={el.id}\r\n                            name={el.name}\r\n                            ava={el.ava}\r\n                            messages={el.messages}\r\n                            setUserActive={props.setUserActive}\r\n                            key={el.id}\r\n                            {...props}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogusers;","// extracted by mini-css-extract-plugin\nexport default {\"userMessage\":\"Usermessage_userMessage__pUV34\",\"userInfo\":\"Usermessage_userInfo__MUrDm\",\"message\":\"Usermessage_message__rZU7c\",\"addMessage\":\"Usermessage_addMessage__YvKnw\"};","// extracted by mini-css-extract-plugin\nexport default {\"userMessage\":\"Messages_userMessage__Le3qD\"};","import React from \"react\";\r\nimport styles from './Messages.module.css'\r\nfunction Messages(props) {\r\n    const messages = props.activeUser.messages.map((el) => {\r\n        return (\r\n            <div className={styles.userMessage}>\r\n                <p>{el.message}</p>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className={styles.userDialog}>\r\n            {messages}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React, { useRef } from \"react\";\r\nimport styles from './Usermessage.module.css';\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport {AddPostTextArea, BazeTextArea} from \"../../../FormComponents/inputs/Inputs\";\r\nfunction Usermessage(props) {\r\n    const activeUserId = props.activeUser\r\n    const activeUser = props.users.find(user => user.id === activeUserId);\r\n\r\n    return (\r\n        <>\r\n            {activeUser ? (\r\n                <div className={styles.userMessage}>\r\n                    <div className={styles.userInfo}>\r\n                        <img src={activeUser.ava} alt={`Ава ${activeUser.name}`} />\r\n                        <h2>{activeUser.name}</h2>\r\n                    </div>\r\n                    <div className={styles.message}>\r\n                        <Messages activeUser={activeUser} />\r\n                    </div>\r\n                    <ReduxAddMessage addMessage={props.addMessage} id={activeUserId}/>\r\n                </div>\r\n            ) : (\r\n                <p>Данные не получены</p>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst AddMessage = (props) => {\r\n    const submit = (values) => {\r\n        props.addMessage(values.addMessage, props.id)\r\n    }\r\n    return (\r\n        <form className={styles.addMessage} onSubmit={props.handleSubmit(submit)}>\r\n            <Field component={AddPostTextArea} name='addMessage' type=\"text\" placeholder=\"Напишите чонить\" />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddMessage = reduxForm({\r\n    form: 'addMessage'\r\n})(AddMessage)\r\nexport default Usermessage;\r\n\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport Dialogusers from \"./DialogUsers/Dialoguswes\";\r\nimport Usermessage from './Usermessage/Usermessage';\r\nfunction Dialogs(props) {\r\n    return (\r\n        <div className={styles.dialogContent}>\r\n            <div className={styles.dialogUsers}>\r\n                <h1>Messages</h1>\r\n                <Dialogusers users={props.users} setUserActive={props.setUserActive}/>\r\n            </div>\r\n            <div className={styles.dialogMessage}>\r\n                <Usermessage\r\n                    addMessage={props.addMessage}\r\n                    activeUser={props.activeUser}\r\n                    users={props.users}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { createSelector } from \"reselect\"\r\n\r\nexport const getDialogs = (state) => {\r\n    return state.dialogs\r\n}\r\n\r\nexport const getDialogUsers = createSelector([getDialogs], \r\n    dialogs => dialogs.users\r\n)\r\n\r\nexport const getActiveUser = createSelector([getDialogs], \r\n    dialogs => dialogs.activeUser\r\n)\r\n","import { connect } from 'react-redux';\r\nimport {withAuthRedirect} from \"../../../Hok/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {isMe} from \"../../../Hok/isMe\";\r\nimport {addMessage, setUserActive} from \"../../../redux/dialogsReducer\";\r\nimport { getActiveUser, getDialogUsers } from '../../../redux/selectors/dialogsSelector';\r\n\r\nconst DialogsContainer = (props) => {\r\n    return <Dialogs {...props}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getDialogUsers(state),\r\n        activeUser: getActiveUser(state)\r\n    }\r\n}\r\nlet mapDispatchToProps =  {\r\n    setUserActive,\r\n    addMessage,\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    isMe,\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(DialogsContainer)\r\n\r\n"],"names":["props","_jsx","className","styles","children","_jsxs","onClick","handleSetActive","setUserActive","id","src","ava","alt","name","users","map","el","Userithem","messages","activeUser","userMessage","message","userDialog","ReduxAddMessage","reduxForm","form","onSubmit","handleSubmit","values","addMessage","Field","component","AddPostTextArea","type","placeholder","activeUserId","find","user","_Fragment","Messages","Dialogusers","Usermessage","getDialogs","state","dialogs","getDialogUsers","createSelector","getActiveUser","mapDispatchToProps","compose","withAuthRedirect","isMe","connect","Dialogs"],"sourceRoot":""}